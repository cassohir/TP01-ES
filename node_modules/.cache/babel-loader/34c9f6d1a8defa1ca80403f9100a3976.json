{"ast":null,"code":"var _jsxFileName = \"/home/caio/Teste_vite/src/contexts/auth.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const userToken = localStorage.getItem(\"user_token\");\n    const usersStorage = localStorage.getItem(\"users_bd\");\n\n    if (userToken && usersStorage) {\n      var _JSON$parse;\n\n      const hasUser = (_JSON$parse = JSON.parse(usersStorage)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.filter(user => user.email === JSON.parse(userToken).email);\n      if (hasUser) setUser(hasUser[0]);\n    }\n  }, []);\n\n  const signin = (email, password) => {\n    const usersStorage = JSON.parse(localStorage.getItem(\"users_bd\"));\n    const hasUser = usersStorage === null || usersStorage === void 0 ? void 0 : usersStorage.filter(user => user.email === email);\n\n    if (hasUser !== null && hasUser !== void 0 && hasUser.length) {\n      if (hasUser[0].email === email && hasUser[0].password === password) {\n        const token = Math.random().toString(36).substring(2);\n        localStorage.setItem(\"user_token\", JSON.stringify({\n          email,\n          token\n        }));\n        setUser({\n          email,\n          password\n        });\n        return;\n      } else {\n        return \"E-mail ou senha incorretos\";\n      }\n    } else {\n      return \"Usuário não cadastrado\";\n    }\n  };\n\n  const signup = (email, password) => {\n    const usersStorage = JSON.parse(localStorage.getItem(\"users_bd\"));\n    const hasUser = usersStorage === null || usersStorage === void 0 ? void 0 : usersStorage.filter(user => user.email === email);\n\n    if (hasUser !== null && hasUser !== void 0 && hasUser.length) {\n      return \"Já tem uma conta com esse E-mail\";\n    }\n\n    let newUser;\n\n    if (usersStorage) {\n      newUser = [...usersStorage, {\n        email,\n        password\n      }];\n    } else {\n      newUser = [{\n        email,\n        password\n      }];\n    }\n\n    localStorage.setItem(\"users_bd\", JSON.stringify(newUser));\n    return;\n  };\n\n  const signout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user_token\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      signed: !!user,\n      signin,\n      signup,\n      signout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/caio/Teste_vite/src/contexts/auth.js"],"names":["createContext","useEffect","useState","AuthContext","AuthProvider","children","user","setUser","userToken","localStorage","getItem","usersStorage","hasUser","JSON","parse","filter","email","signin","password","length","token","Math","random","toString","substring","setItem","stringify","signup","newUser","signout","removeItem","signed"],"mappings":"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","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    const userToken = localStorage.getItem(\"user_token\");\n    const usersStorage = localStorage.getItem(\"users_bd\");\n\n    if (userToken && usersStorage) {\n      const hasUser = JSON.parse(usersStorage)?.filter(\n        (user) => user.email === JSON.parse(userToken).email\n      );\n\n      if (hasUser) setUser(hasUser[0]);\n    }\n  }, []);\n\n  const signin = (email, password) => {\n    const usersStorage = JSON.parse(localStorage.getItem(\"users_bd\"));\n\n    const hasUser = usersStorage?.filter((user) => user.email === email);\n\n    if (hasUser?.length) {\n      if (hasUser[0].email === email && hasUser[0].password === password) {\n        const token = Math.random().toString(36).substring(2);\n        localStorage.setItem(\"user_token\", JSON.stringify({ email, token }));\n        setUser({ email, password });\n        return;\n      } else {\n        return \"E-mail ou senha incorretos\";\n      }\n    } else {\n      return \"Usuário não cadastrado\";\n    }\n  };\n\n  const signup = (email, password) => {\n    const usersStorage = JSON.parse(localStorage.getItem(\"users_bd\"));\n\n    const hasUser = usersStorage?.filter((user) => user.email === email);\n\n    if (hasUser?.length) {\n      return \"Já tem uma conta com esse E-mail\";\n    }\n\n    let newUser;\n\n    if (usersStorage) {\n      newUser = [...usersStorage, { email, password }];\n    } else {\n      newUser = [{ email, password }];\n    }\n\n    localStorage.setItem(\"users_bd\", JSON.stringify(newUser));\n\n    return;\n  };\n\n  const signout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user_token\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ user, signed: !!user, signin, signup, signout }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}